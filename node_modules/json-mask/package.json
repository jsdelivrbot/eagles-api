{
  "_args": [
    [
      {
        "raw": "json-mask@0.3.2",
        "scope": null,
        "escapedName": "json-mask",
        "name": "json-mask",
        "rawSpec": "0.3.2",
        "spec": "0.3.2",
        "type": "version"
      },
      "/media/yonas/1A0A7B790A7B512D/project/eagles-api-test/node_modules/express-partial-response"
    ]
  ],
  "_from": "json-mask@0.3.2",
  "_id": "json-mask@0.3.2",
  "_inCache": true,
  "_location": "/json-mask",
  "_npmUser": {
    "name": "nemtsov",
    "email": "nemtsov@gmail.com"
  },
  "_npmVersion": "1.4.23",
  "_phantomChildren": {},
  "_requested": {
    "raw": "json-mask@0.3.2",
    "scope": null,
    "escapedName": "json-mask",
    "name": "json-mask",
    "rawSpec": "0.3.2",
    "spec": "0.3.2",
    "type": "version"
  },
  "_requiredBy": [
    "/express-partial-response"
  ],
  "_resolved": "https://registry.npmjs.org/json-mask/-/json-mask-0.3.2.tgz",
  "_shasum": "c94f1c025b0886ed047b0cebe1ec293db329b458",
  "_shrinkwrap": null,
  "_spec": "json-mask@0.3.2",
  "_where": "/media/yonas/1A0A7B790A7B512D/project/eagles-api-test/node_modules/express-partial-response",
  "author": {
    "name": "nemtsov@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/nemtsov/json-mask/issues"
  },
  "dependencies": {},
  "description": "Tiny language and engine for selecting specific parts of a JS object, hiding the rest.",
  "devDependencies": {
    "mocha": "~1.12.0"
  },
  "directories": {},
  "dist": {
    "shasum": "c94f1c025b0886ed047b0cebe1ec293db329b458",
    "tarball": "https://registry.npmjs.org/json-mask/-/json-mask-0.3.2.tgz"
  },
  "gitHead": "587e325aeb66c12bc4f586171d0706a0337a005f",
  "homepage": "https://github.com/nemtsov/json-mask#readme",
  "keywords": [
    "mask",
    "filter",
    "select",
    "fields",
    "projection",
    "query",
    "json"
  ],
  "license": "MIT",
  "main": "lib/index",
  "maintainers": [
    {
      "name": "nemtsov",
      "email": "nemtsov@gmail.com"
    }
  ],
  "name": "json-mask",
  "optionalDependencies": {},
  "readme": "# JSON Mask [![Build Status](https://secure.travis-ci.org/nemtsov/json-mask.png)](http://travis-ci.org/nemtsov/json-mask) [![NPM version](https://badge.fury.io/js/json-mask.png)](http://badge.fury.io/js/json-mask)\n\n<img src=\"https://raw.github.com/nemtsov/json-mask/master/logo.png\" align=\"right\" width=\"267px\" />\n\nThis is a tiny language and an engine for selecting specific parts of a JS object, hiding/masking the rest.\n\n```js\nvar mask = require('json-mask')\nmask({p: {a: 1, b: 2}, z: 1}, 'p/a,z')  // {p: {a: 1}, z: 1}\n```\n\nThe main difference between JSONPath / JSONSelect and this engine is that JSON Mask \n**preserves the structure of the original input object**.\nInstead of returning an array of selected sub-elements (e.g. `[{a: 1}, {z: 1}]` from example above), \nit filters-out the parts of the object that you don't need, \nkeeping the structure unchanged: `{p: {a: 1}, z: 1}`.\n\nThis is important because JSON Mask was designed with HTTP resources in mind, \nthe structure of which I didn't want to change after the unwanted fields\nwere masked / filtered.\n\nIf you've used the Google APIs, and provided a `?fields=` query-string to get a\n[Partial Response](https://developers.google.com/+/api/#partial-responses), you've\nalready used this language. The desire to have partial responses in\nmy own Node.js-based HTTP services was the reason I wrote JSON Mask.\n\n*For [express](http://expressjs.com/) users, there's an\n[express-partial-response](https://github.com/nemtsov/express-partial-response) middleware.\nIt will integrate with your existing services with no additional code \nif you're using `res.json()` or `res.jsonp()`. And if you're already using [koa](https://github.com/koajs/koa.git)\ncheck out the [koa-json-mask](https://github.com/nemtsov/koa-json-mask) middleware.*\n\nThis library has no dependencies. It works in Node as well as in the browser:\n\n[![browser support](https://ci.testling.com/nemtsov/json-mask.png)](https://ci.testling.com/nemtsov/json-mask)\n\n**Note:** the 1.5KB (gz), or 4KB (uncompressed) browser build is in the `/build` folder.\n\n## Syntax\n\nThe syntax is loosely based on XPath:\n\n- ` a,b,c` comma-separated list will select multiple fields\n- ` a/b/c` path will select a field from its parent\n- `a(b,c)` sub-selection will select many fields from a parent\n- ` a/*/c` the star `*` wildcard will select all items in a field\n\nTake a look at `test/index-test.js` for examples of all of these and more.\n\n\n## Grammar\n\n```\n  Props ::= Prop | Prop \",\" Props\n   Prop ::= Object | Array\n Object ::= NAME | NAME \"/\" Object\n  Array ::= NAME \"(\" Props \")\"\n   NAME ::= ? all visible characters ?\n```\n\n\n\n## Examples\n\nIdentify the fields you want to keep:\n```js\nvar fields = 'url,object(content,attachments/url)'\n```\n\nFrom this sample object:\n```js\nvar originalObj = {\n  id: 'z12gtjhq3qn2xxl2o224exwiqruvtda0i',\n  url: 'https://plus.google.com/102817283354809142195/posts/F97fqZwJESL',\n  object: {\n    objectType: 'note',\n    content: 'A picture... of a space ship... launched from earth 40 years ago.',\n    attachments: [{\n      objectType: 'image',\n      url: 'http://apod.nasa.gov/apod/ap110908.html',\n      image: {height: 284, width: 506}\n    }]\n  },\n  provider: {title: 'Google+'}\n}\n```\n\nHere's what you'll get back:\n```js\nvar expectObj = {\n  url: 'https://plus.google.com/102817283354809142195/posts/F97fqZwJESL',\n  object: {\n    content: 'A picture... of a space ship... launched from earth 40 years ago.',\n    attachments: [{\n      url: 'http://apod.nasa.gov/apod/ap110908.html'\n    }]\n  }\n}\n```\n\nLet's test that:\n```js\nvar mask = require('json-mask')\n  , assert = require('assert')\n  , maskedObj\n\nmaskedObj = mask(originalObj, fields)\n\nassert.deepEqual(maskedObj, expectObj)\n```\n\n\n### Partial Responses Server Example\n\nHere's an example of using `json-mask` to implement the\n[Google API Partial Response](https://developers.google.com/+/api/#partial-responses)\n\n```js\nvar http = require('http')\n  , url = require('url')\n  , mask = require('json-mask')\n  , server\n\nserver = http.createServer(function (req, res) {\n  var fields = url.parse(req.url, true).query.fields\n    , data = {\n          firstName: 'Mohandas'\n        , lastName: 'Gandhi'\n        , aliases: [{\n              firstName: 'Mahatma'\n            , lastName: 'Gandhi'\n          }, {\n              firstName: 'Bapu'\n          }]\n      }\n  res.writeHead(200, {'Content-Type': 'application/json'})\n  res.end(JSON.stringify(mask(data, fields)))\n})\n\nserver.listen(4000)\n```\n\nLet's test it:\n```bash\n$ curl 'http://localhost:4000'\n{\"firstName\":\"Mohandas\",\"lastName\":\"Gandhi\",\"aliases\":[{\"firstName\":\"Mahatma\",\"lastName\":\"Gandhi\"},{\"firstName\":\"Bapu\"}]}\n\n$ # Let's just get the first name\n$ curl 'http://localhost:4000?fields=lastName'\n{\"lastName\":\"Gandhi\"}\n\n$ # Now, let's just get the first names directly as well as from aliases\n$ curl 'http://localhost:4000?fields=firstName,aliases(firstName)'\n{\"firstName\":\"Mohandas\",\"aliases\":[{\"firstName\":\"Mahatma\"},{\"firstName\":\"Bapu\"}]}\n```\n\n**Note:** a few more examples are in the `/example` folder.\n\n\nCDN\n---\n\n**jsDelivr**\n  - `//cdn.jsdelivr.net/jsonmask/0.3.0/jsonMask.js`\n  - `//cdn.jsdelivr.net/jsonmask/0.3.0/jsonMask.min.js`\n\n\n\nLicense\n-------\n\nMIT. See LICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nemtsov/json-mask.git"
  },
  "scripts": {
    "_build-browser-full": "browserify -s jsonMask -e lib/index.js | sed -e \"s/\\[ *'.*' *\\]/;/\" > build/jsonMask.js",
    "_build-browser-license": "cat build/copyright  | cat - build/jsonMask.js  | tee build/jsonMask.js",
    "_build-browser-min": "cat build/jsonMask.js | uglifyjs --comments > build/jsonMask.min.js",
    "build-browser": "npm run-script _build-browser-full; npm run-script _build-browser-license; npm run-script _build-browser-min",
    "test": "mocha",
    "test-cov": "istanbul cover _mocha",
    "test-watch": "mocha -w -G -R min"
  },
  "testling": {
    "browsers": [
      "ie/8..latest",
      "firefox/16..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ],
    "harness": "mocha",
    "files": "test/*.js"
  },
  "version": "0.3.2"
}
