{
  "_args": [
    [
      {
        "raw": "voc@",
        "scope": null,
        "escapedName": "voc",
        "name": "voc",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/media/yonas/1A0A7B790A7B512D/project/eagles-api/node_modules/codepage"
    ]
  ],
  "_from": "voc@latest",
  "_id": "voc@0.5.0",
  "_inCache": true,
  "_location": "/voc",
  "_npmUser": {
    "name": "sheetjs",
    "email": "dev@sheetjs.com"
  },
  "_npmVersion": "1.4.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "voc@",
    "scope": null,
    "escapedName": "voc",
    "name": "voc",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/codepage",
    "/ssf"
  ],
  "_resolved": "https://registry.npmjs.org/voc/-/voc-0.5.0.tgz",
  "_shasum": "be6ca7c76e4a57d930cc80f6b31fbd80ca86045c",
  "_shrinkwrap": null,
  "_spec": "voc@",
  "_where": "/media/yonas/1A0A7B790A7B512D/project/eagles-api/node_modules/codepage",
  "author": {
    "name": "SheetJS"
  },
  "bin": {
    "voc": "./voc.njs"
  },
  "bugs": {
    "url": "https://github.com/SheetJS/voc/issues"
  },
  "dependencies": {},
  "description": "Generalized Literate Programming Framework",
  "devDependencies": {
    "coffee-script": ""
  },
  "directories": {},
  "dist": {
    "shasum": "be6ca7c76e4a57d930cc80f6b31fbd80ca86045c",
    "tarball": "https://registry.npmjs.org/voc/-/voc-0.5.0.tgz"
  },
  "files": [
    "LICENSE",
    "README.md",
    "marked.js",
    "mkdirp.js",
    "voc.js",
    "voc.njs"
  ],
  "gitHead": "0c624d2a9af0b68690498d0b5dca199ed2972985",
  "homepage": "https://github.com/SheetJS/voc#readme",
  "keywords": [
    "literate",
    "programming",
    "voc",
    "javascript"
  ],
  "main": "voc.js",
  "maintainers": [
    {
      "name": "sheetjs",
      "email": "dev@sheetjs.com"
    }
  ],
  "name": "voc",
  "optionalDependencies": {},
  "preferGlobal": true,
  "readme": "# Very Ornate Code\n\nSo [Literate Coffeescript](http://coffeescript.org/#literate) is a cool idea,\nbut why isn't there a standard JS or compile-to-JS version?  JS Programmers want\nsome love too!  This is my effort to rectify this inequity.\n\n## How to use this\n\nTo use in-browser, include the marked source (and optionally the coffee-script \nsource if desired):\n\n```html>\n<script src=\"https://raw.github.com/chjj/marked/master/lib/marked.js\"></script>\n<script src=\"http://coffeescript.org/extras/coffee-script.js\"></script>\n```\n\nIn tooling, `npm install -g voc` and run against your markdown file:\n\n```>\n$ voc yourfile.md\n```\n\n## VOC style\n\nVOC searches for markdown code blocks.  Using GFM guards (triple backticks),\nhints after the opening backticks are used to direct content.\n\nFor example, \"\\`\\`\\`&gt;foo.bar\" will redirect content in the codeblock to \n`foo.bar`.  \n\n## Preprocessing\n\nIf a preprocessor is available, VOC can be told to use it!  This is needed for\ncertain magic cases like Makefiles (which require explicit tabs).\n\nAs described in voc.md, there are two exported methods: `add` and `run`. To add\nyour own language preprocessor:\n\n1. Define the handler function (accepts code and returns JS)\n\n2. Add the language to the framework\n\n3. Profit!\n\nSee the enclosed voc.md for more information.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/SheetJS/voc.git"
  },
  "scripts": {},
  "version": "0.5.0"
}
